name: RECOVERY

on:
  workflow_dispatch:
    inputs:
      RECOVERY_URL:
        description: 'URL direta do recovery (.img ou .img.lz4)'
        required: true

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout (v4)
        uses: actions/checkout@v4

      - name: Instalar dependências
        run: |
          sudo apt-get update
          sudo apt-get install -y lz4 curl unzip zip tar git file

      - name: Baixar recovery
        run: |
          set -e
          URL="${{ github.event.inputs.RECOVERY_URL }}"
          echo "Baixando: $URL"
          curl -L "$URL" -o recovery.bin
          file recovery.bin || true
          if file recovery.bin | grep -qi "LZ4"; then
            echo "Detectado LZ4, descompactando..."
            lz4 -d recovery.bin recovery.img
          else
            mv recovery.bin recovery.img
          fi
          ls -lh recovery.img
          # copia para o local que o script usa como origem
          mkdir -p /home/runner/work/Patch-Recovery
          cp -f recovery.img /home/runner/work/Patch-Recovery/r.img
          ls -lh /home/runner/work/Patch-Recovery/r.img

      - name: Clonar Patch-Recovery (Johx22) no caminho esperado
        run: |
          set -e
          # limpa qualquer sobra de execução anterior
          rm -rf /home/runner/work/Patch-Recovery/Patch-Recovery || true
          git clone --depth=1 https://github.com/Johx22/Patch-Recovery.git /home/runner/work/Patch-Recovery/Patch-Recovery
          ls -la /home/runner/work/Patch-Recovery/Patch-Recovery

      - name: Baixar magiskboot e posicionar no caminho hardcoded
        run: |
          set -e
          curl -L -o Magisk.apk https://github.com/topjohnwu/Magisk/releases/latest/download/Magisk.apk
          unzip -j Magisk.apk lib/arm64-v8a/libmagiskboot.so -d .
          mv libmagiskboot.so magiskboot
          chmod +x magiskboot
          mkdir -p /home/runner/work/Patch-Recovery/Patch-Recovery
          cp magiskboot /home/runner/work/Patch-Recovery/Patch-Recovery/magiskboot
          ls -l /home/runner/work/Patch-Recovery/Patch-Recovery/magiskboot

      - name: Rodar script1.sh
        run: |
          set -e
          cd /home/runner/work/Patch-Recovery/Patch-Recovery
          chmod +x script1.sh script2.sh || true
          ./script1.sh ../r.img || ./script1.sh || true

      - name: Rodar script2.sh
        run: |
          set -e
          cd /home/runner/work/Patch-Recovery/Patch-Recovery
          ./script2.sh

      - name: Coletar artefatos gerados
        run: |
          set -e
          mkdir -p output
          find /home/runner/work/Patch-Recovery -maxdepth 2 -type f \( -name "*.img" -o -name "*.tar" -o -name "*.zip" \) -print -exec cp -f {} output/ \; || true
          if [ ! -f output/patched-recovery.tar ]; then
            IMG=$(ls -1 output/*patched*recovery*.img 2>/dev/null | head -n1 || true)
            if [ -n "$IMG" ]; then
              echo "Criando TAR para Odin a partir de: $IMG"
              tar --format=ustar -cvf output/patched-recovery.tar -C "$(dirname "$IMG")" "$(basename "$IMG")"
            fi
          fi
          ls -lh output || true

      - name: Upload patched recovery (v4)
        uses: actions/upload-artifact@v4
        with:
          name: patched-recovery
          path: output/*
          retention-days: 7
